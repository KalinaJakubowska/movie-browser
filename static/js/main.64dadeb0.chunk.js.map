{"version":3,"sources":["assets/noPosterImage.svg","assets/loadingCircle.svg","assets/star.svg","assets/input-logo.svg","assets/camera-logo.svg","styled.js","common/Loading/styled.js","common/Loading/index.js","features/listSlice.js","features/pageParameters.js","features/BottomNavbar/styled.js","features/BottomNavbar/index.js","common/tiles/Ratings/styled.js","common/tiles/Ratings/index.js","common/tiles/tileStyles.js","common/tiles/MovieTile/styled.js","common/commonSlice.js","common/tiles/Types/styled.js","common/tiles/Types/index.js","common/tiles/MovieTile/index.js","common/tiles/TileContainer.js","common/Header.js","common/apiKey.js","features/movies/MoviesPage/index.js","common/language.js","features/itemSlice.js","common/tiles/PersonTile/styled.js","common/tiles/PersonTile/index.js","common/tiles/bigTilesStyles.js","common/tiles/BigMovieTile/styled.js","common/tiles/BigMovieTile/index.js","features/movies/MoviePage/index.js","features/people/PeoplePage/index.js","common/tiles/BigPersonTile/styled.js","common/tiles/BigPersonTile/index.js","features/people/PersonPage/index.js","features/Search/styled.js","features/Search/index.js","App.js","serviceWorker.js","GlobalStyle.js","getApiData.js","common/commonSaga.js","features/itemSaga.js","features/listSaga.js","rootSaga.js","store.js","index.js","theme.js"],"names":["module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_ref3","fillRule","clipRule","_ref","svgRef","title","props","width","height","viewBox","fill","ref","ForwardRef","forwardRef","Nav","styled","nav","theme","colors","black","white","WidthContainer","div","NavContainer","breakpoints","mobile","NavContainerLeft","bigMobile","NavContainerRight","List","ul","ListItem","li","StyledNavLink","NavLink","attrs","activeClassName","Title","p","StyledTitleLogo","TitleLogo","LoadingContainer","Image","img","Loading","src","loadingCircle","listSlice","createSlice","name","initialState","list","loading","activePage","numberPages","undefined","activePath","query","reducers","fetchListSuccess","state","payload","results","total_pages","fetchListError","setActivePage","pageNumber","setActivePath","resetState","setQuery","actions","selectList","selectLoading","selectNumberPages","selectQuery","usePageParameter","paramName","location","useLocation","URLSearchParams","search","get","useReplacePageParameters","history","useHistory","searchParams","parameters","forEach","value","delete","set","push","pathname","includes","toString","Container","Button","button","mineShaft","cornsilk","PageCounter","span","waterloo","Number","woodsmoke","BottomNavbar","urlPageNumber","page","useSelector","replacePageParameters","onButtonClick","disabled","onClick","Star","Rate","Votes","Ratings","voteAverage","voteCount","star","Wrapper","Link","textLength","Year","DetailsContainer","MovieWrapper","MovieImage","commonSlice","genresList","fetchCommon","fetchCommonSuccess","data","genres","fetchCommonError","selectGenres","common","TypesWrapper","TypeBox","BigTypeBox","Types","genre_ids","big","map","id","MovieTile","poster_path","release_date","vote_average","vote_count","role","to","noPosterImage","alt","slice","MovieContainer","PeopleContainer","Header","h1","apiKey","MoviesPage","dispatch","useDispatch","urlQuery","popularMovies","isLoading","useEffect","itemSlice","itemData","extraData","itemId","activeItemPath","activeExtraPath","setItemId","fetchItemSuccess","fetchItemError","path1","path2","selectItemData","item","selectExtraData","PersonWrapper","PersonImage","PersonDetailsContainer","PersonName","subtitle","Subtitle","PersonTile","profile_path","noProfileImage","BigTileWrapper","BigTileHeader","BigDetailsContainer","Detail","MarkedDetail","stormGray","Description","DetailsWrapper","BigMovieImage","BigMovieTile","production_countries","overview","as","country","MoviePage","useParams","movieData","castCrewData","genre","cast","character","credit_id","crew","job","PeoplePage","popularPeople","BigTileImage","BigPersonTile","birthday","place_of_birth","biography","PersonPage","personData","Input","input","SearchBox","form","StyledLensButton","InputIcon","Search","searchText","onSubmit","event","preventDefault","placeholder","onChange","App","path","Boolean","window","hostname","match","GlobalStyle","createGlobalStyle","whisper","getApiData","link","a","axios","then","response","catch","console","log","fetchCommonHandler","watchfetchCommon","delay","put","alert","takeEvery","type","fetchItemHandler","watchSetItemId","store","getState","fetchListHandler","watchSetActivePath","rootSaga","all","sagaMiddleware","createSagaMiddleware","configureStore","reducer","listReducer","itemReducer","commonReducer","middleware","run","ReactDOM","render","StrictMode","tan","screenSmall","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.64dadeb0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterImage.e8d1851c.svg\";","module.exports = __webpack_public_path__ + \"static/media/loadingCircle.d057d55a.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.b489e613.svg\";","module.exports = __webpack_public_path__ + \"static/media/input-logo.ab39462f.svg\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24 17.9658L30.1083 20.4625C31.2683 20.9358 32.5384 20.0841 32.5384 18.8308V7.76581C32.5384 6.51248 31.2683 5.65915 30.1083 6.13248L24 8.62915\",\n  stroke: \"white\",\n  strokeWidth: 2.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M7.50683 24.9014H17.9552C21.5952 24.9014 23.8785 22.5297 23.8785 19.1714V7.4797C23.8785 4.12136 21.6052 1.74969 17.9552 1.74969H7.50683C3.85516 1.74969 1.5835 4.12136 1.5835 7.4797V19.1714C1.5835 22.5297 3.85516 24.9014 7.50683 24.9014Z\",\n  stroke: \"white\",\n  strokeWidth: 2.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n});\n\nvar SvgCameraLogo = function SvgCameraLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 34,\n    height: 27,\n    viewBox: \"0 0 34 27\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCameraLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/camera-logo.af05430f.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { ReactComponent as TitleLogo } from \"./assets/camera-logo.svg\";\r\n\r\nconst activeClassName = \"link-active\";\r\n\r\nexport const Nav = styled.nav`\r\n  background: ${({ theme }) => theme.colors.black};\r\n  color: ${({ theme }) => theme.colors.white};\r\n  min-height: 94px;\r\n`;\r\n\r\nexport const WidthContainer = styled.div`\r\n  max-width: 1400px;\r\n  padding: 16px;\r\n  margin: 0 auto;\r\n  min-height: inherit;\r\n`;\r\n\r\nexport const NavContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-basis: 50%;\r\n  min-height: inherit;\r\n  justify-content: center;\r\n  padding: 0 10px;\r\n  flex-wrap: wrap;\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: ${({theme}) => theme.breakpoints.mobile}px) {\r\n    min-height: 71px;\r\n  }\r\n`;\r\n\r\nexport const NavContainerLeft = styled(NavContainer)`\r\n  flex-wrap: nowrap;\r\n  justify-content: space-between;\r\n\r\n  @media (max-width: ${({theme}) => theme.breakpoints.bigMobile}px) {\r\n    flex-basis: 80vw;\r\n    justify-content: space-evenly;\r\n  }\r\n\r\n  @media (max-width: ${({theme}) => theme.breakpoints.mobile}px) {\r\n    flex-basis: 100%;\r\n    justify-content: space-around;\r\n  }\r\n`;\r\n\r\nexport const NavContainerRight = styled(NavContainer)`\r\n  justify-content: flex-end;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n    flex-basis: 100%;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  margin: 0 auto;\r\n  list-style: none;\r\n  padding-left: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const StyledNavLink = styled(NavLink).attrs(() => ({\r\n  activeClassName,\r\n}))`\r\n  text-decoration: none;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: ${({ theme }) => theme.colors.white};\r\n  padding: 13px 24px;\r\n  margin: 0 10px;\r\n\r\n  &.${activeClassName} {\r\n    border: 1px solid ${({ theme }) => theme.colors.white};\r\n    border-radius: 33px;\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.bigMobile}px) {\r\n    font-size: 13px;\r\n    padding: 11px 18px;\r\n    margin: 0 3px;\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n    font-size: 12px;\r\n    padding: 8px 12px;\r\n    margin: 0 3px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.p`\r\n  color: ${({ theme }) => theme.colors.white};\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n  padding-left: 16px;\r\n  margin: 0;\r\n  display: flex;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.bigMobile}px) {\r\n    font-size: 18px;\r\n    padding: 10;\r\n    margin-right: 22px;\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n    font-size: 13px;\r\n    padding: 0;\r\n    margin-right: 19px;\r\n  }\r\n`;\r\n\r\nexport const StyledTitleLogo = styled(TitleLogo)`\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n    height: 12px;\r\n  }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const LoadingContainer = styled.div`\r\nwidth: 100%;\r\nheight: 250px;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n    width: 91px;\r\n    height: 91px;\r\n    transform: rotate(360deg);\r\n    animation: spin;\r\n    animation-duration: 1.25s;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n\r\n    @keyframes spin {\r\n        from {\r\n            transform: unset;\r\n        }\r\n        to {\r\n            transform: translateX(360deg);\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\nimport loadingCircle from \"./../../assets/loadingCircle.svg\";\r\nimport { Image, LoadingContainer } from \"./styled\";\r\n\r\nconst Loading = () => (\r\n    <LoadingContainer>\r\n        <Image src={loadingCircle} />\r\n    </LoadingContainer>\r\n);\r\n\r\nexport default Loading;","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport listPaths from \"../common/listPaths\";\r\n\r\nconst listSlice = createSlice({\r\n    name: \"people\",\r\n    initialState: {\r\n        list: [],\r\n        loading: true,\r\n        activePage: 1,\r\n        numberPages: undefined,\r\n        activePath: \"\",\r\n        query: \"\",\r\n    },\r\n    reducers: {\r\n        fetchListSuccess: (state, { payload: list }) => {\r\n            state.list = list.results;\r\n            state.numberPages = list.total_pages;\r\n            state.loading = false;\r\n        },\r\n        fetchListError: state => {\r\n            state.loading = false;\r\n        },\r\n        setActivePage: (state, { payload: pageNumber }) => {\r\n            state.activePage = pageNumber;\r\n            state.loading = true;\r\n        },\r\n        setActivePath: (state, { payload: name }) => {\r\n            state.activePath = name;\r\n        },\r\n        resetState: (state) => {\r\n            state.list = [];\r\n            state.activePage = undefined;\r\n            state.activePath = \"\";\r\n            state.numberPages = undefined;\r\n            state.loading = true;\r\n        },\r\n        setQuery: (state, { payload: query }) => {\r\n            state.query = query;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    fetchListSuccess,\r\n    fetchListError,\r\n    setActivePage,\r\n    setActivePath,\r\n    resetState,\r\n    setQuery,\r\n} = listSlice.actions;\r\nexport const selectList = state => state.list.list;\r\nexport const selectLoading = state => state.list.loading;\r\nexport const selectActivePage = state => state.list.activePage;\r\nexport const selectNumberPages = state => state.list.numberPages;\r\nexport const selectQuery = state => state.list.query;\r\n\r\nexport default listSlice.reducer;","import { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nexport const usePageParameter = paramName => {\r\n    const location = useLocation();\r\n\r\n    return (new URLSearchParams(location.search)).get(paramName);\r\n};\r\n\r\nexport const useReplacePageParameters = () => {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const searchParams = new URLSearchParams(location.search);\r\n\r\n    const replacePageParameters = (parameters) => {\r\n        parameters.forEach(({ key, value }) => {\r\n            if (value === \"\") {\r\n                searchParams.delete(key);\r\n            } else {\r\n                searchParams.set(key, value);\r\n            }\r\n        });\r\n\r\n        history.push(`${location.pathname.includes(\"movie\") ? \"/movies\" : \"/people\"}?${searchParams.toString()}`);\r\n    };\r\n\r\n    return replacePageParameters;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\nwidth: fit-content;\r\n    margin: 40px auto 100px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 10px;\r\n    margin: 0px 12px;\r\n    background: #D6E4FF;\r\n    border-radius: 5px;\r\n    padding: 8px 16px 8px 16px;\r\n    color:${({ theme }) => theme.colors.mineShaft};\r\n    border: none;\r\n    cursor: pointer;\r\n\r\n    &:disabled {\r\n        background-color: ${({ theme }) => theme.colors.cornsilk};\r\n    }\r\n`;\r\n\r\nexport const PageCounter = styled.span`\r\n    font-size: 16px;\r\n    line-height: 150%;\r\n    color: ${({ theme }) => theme.colors.waterloo};\r\n    margin: 0px 24px;\r\n`;\r\n\r\nexport const Number = styled.span`\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    line-height: 150%;\r\n    color: ${({ theme }) => theme.colors.woodsmoke};\r\n`;","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectNumberPages } from \"../listSlice\";\r\nimport { usePageParameter, useReplacePageParameters } from \"../pageParameters\";\r\nimport { Container, Button, PageCounter, Number } from \"./styled\";\r\n\r\nconst BottomNavbar = () => {\r\n    const urlPageNumber = +usePageParameter(\"page\");\r\n    const page = urlPageNumber < 1 || urlPageNumber > 500 ? 1 : urlPageNumber;\r\n    const numberPages = useSelector(selectNumberPages);\r\n    const replacePageParameters = useReplacePageParameters();\r\n\r\n    const onButtonClick = (page) => {\r\n        replacePageParameters([{\r\n            key: \"page\",\r\n            value: page,\r\n        }]);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Button\r\n                disabled={page === 1} onClick={() =>\r\n                    onButtonClick(1)}\r\n            >\r\n                {\"< First\"}\r\n            </Button>\r\n            <Button\r\n                disabled={page === 1} onClick={() =>\r\n                    onButtonClick(page - 1)}\r\n            >\r\n                {\"< Previous\"}\r\n            </Button>\r\n            <PageCounter>\r\n                Page <Number>{page}</Number> of <Number>{numberPages}</Number>\r\n            </PageCounter>\r\n            <Button\r\n                disabled={page === numberPages} onClick={() =>\r\n                    onButtonClick(page + 1)}\r\n            >\r\n                {\"Next >\"}\r\n            </Button>\r\n            <Button\r\n                disabled={page === numberPages} onClick={() =>\r\n                    onButtonClick(numberPages)}\r\n            >\r\n                {\"Last >\"}\r\n            </Button>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default BottomNavbar;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  height: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Star = styled.img`\r\n  width: 24px;\r\n  height: 22.87px;\r\n\r\n  @media (max-width: ${({theme}) => theme.breakpoints.mobile}px) {\r\n    width: 16px;\r\n    height: 15.25px;\r\n  }\r\n`;\r\n\r\nexport const Rate = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  margin: 0 12px;\r\n\r\n  @media (max-width: ${({theme}) => theme.breakpoints.mobile}px) {\r\n    font-size: 13px;\r\n    margin: 0 7px;\r\n  }\r\n`;\r\n\r\nexport const Votes = styled.span`\r\n  font-size: 16px;\r\n  color: ${({theme}) => theme.colors.waterloo};\r\n\r\n  @media (max-width: ${({theme}) => theme.breakpoints.mobile}px) {\r\n    font-size: 13px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Container, Star, Rate, Votes } from \"./styled\";\r\nimport star from \"../../../assets/star.svg\";\r\n\r\nconst Ratings = ({ voteAverage, voteCount }) => {\r\n  return (\r\n    <>\r\n      { voteCount\r\n        ? (\r\n          <Container>\r\n            <Star src={star} />\r\n            <Rate>{voteAverage}</Rate>\r\n            <Votes>{voteCount} votes</Votes>\r\n          </Container>\r\n        )\r\n        : <Votes>No votes yet</Votes>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ratings;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled(Link)`\r\n  text-decoration: none;\r\n  display: flex;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  box-shadow: 0px 4px 12px rgba(186, 199, 213, 0.5);\r\n  border-radius: 5px;\r\n  color: ${({ theme }) => theme.colors.woodsmoke};\r\n  min-height: fit-content;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  display: block;\r\n  border-radius: 5px;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 8px;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-weight: 500;\r\n  font-size: ${({ textLength }) => (textLength > 40)\r\n    ? \"18px\"\r\n    : \"22px\"\r\n  };\r\n  line-height: 130%;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport const Year = styled.div`\r\n  font-size: 16px;\r\n  line-height: 150%;\r\n  color: ${({ theme }) => theme.colors.waterloo};\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n    font-size: 13px;\r\n  }\r\n`;\r\n\r\nexport const DetailsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  justify-content: space-between;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n    margin-left: 16px;\r\n    justify-content: unset;\r\n  }\r\n`;","import styled from \"styled-components\";\r\nimport { Wrapper, Image } from \"./../tileStyles\";\r\n\r\nexport const MovieWrapper = styled(Wrapper)`\r\n    flex-direction: column;\r\n    width: 324px;\r\n    padding: 16px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.bigMobile}px) {\r\n        flex-direction: row;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const MovieImage = styled(Image)`\r\n    margin-bottom: 16px;\r\n    height: 434px;\r\n    width: 292px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.bigMobile}px) {\r\n    width: auto;\r\n    height: 230px;\r\n    margin-right: 20px;\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n    height: 169px;\r\n    width: 114px;\r\n    margin-right: 0;\r\n  }\r\n`;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst commonSlice = createSlice({\r\n    name: \"common\",\r\n    initialState: {\r\n        genresList: [],\r\n        loading: true,\r\n    },\r\n    reducers: {\r\n        fetchCommon: state => {\r\n            state.loading = true;\r\n        },\r\n        fetchCommonSuccess: (state, { payload: data }) => {\r\n            state.genresList = data.genres;\r\n            state.loading = false;\r\n        },\r\n        fetchCommonError: state => {\r\n            state.loading = false;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    fetchCommon,\r\n    fetchCommonSuccess,\r\n    fetchCommonError,\r\n} = commonSlice.actions;\r\nexport const selectGenres = state => state.common.genresList;\r\nexport const selectLoading = state => state.common.loading;\r\n\r\nexport default commonSlice.reducer;","import styled from \"styled-components\";\r\n\r\nexport const TypesWrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const TypeBox = styled.div`\r\n    padding: 8px 16px;\r\n    height: 36px;\r\n    background-color: ${({theme}) => theme.colors.cornsilk};\r\n    border-radius: 5px;\r\n    margin: 0 8px 8px 0;\r\n    font-size: 14px;\r\n    line-height: 140%;\r\n    color: ${({theme}) => theme.colors.woodsmoke};\r\n    flex-grow: 0;\r\n`;\r\n\r\nexport const BigTypeBox = styled(TypeBox)`\r\n    font-size: 14px;\r\n    line-height: 100%;\r\n    height: 30px;\r\n    margin-right: 8px;\r\n`;","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectGenres, selectLoading } from \"../../commonSlice\";\r\nimport { TypesWrapper, TypeBox, BigTypeBox } from \"./styled\";\r\n\r\nconst Types = ({ genre_ids, big = false }) => {\r\n    const genresList = useSelector(selectGenres);\r\n    const loading = useSelector(selectLoading);\r\n\r\n    return (\r\n        <TypesWrapper>\r\n            {((!loading && genre_ids)\r\n                && genresList.map(({ id, name }) => genre_ids.includes(id)\r\n                    && (big\r\n                        ? <TypeBox key={id}>{name}</TypeBox>\r\n                        : <BigTypeBox key={id}>{name}</BigTypeBox>\r\n                    )\r\n                )\r\n            )}\r\n        </TypesWrapper>\r\n    );\r\n};\r\n\r\nexport default Types;","import React from \"react\";\r\nimport Ratings from \"./../../tiles/Ratings\";\r\nimport {\r\n  Title,\r\n  Year,\r\n  Container,\r\n  DetailsContainer,\r\n} from \"./../tileStyles\";\r\nimport { MovieWrapper, MovieImage } from \"./styled\";\r\nimport noPosterImage from \"./../../../assets/noPosterImage.svg\";\r\nimport Types from \"./../Types\";\r\n\r\nconst MovieTile = ({\r\n  id,\r\n  poster_path,\r\n  title,\r\n  release_date,\r\n  vote_average,\r\n  vote_count,\r\n  role,\r\n  genre_ids,\r\n}) => {\r\n  return (\r\n    <MovieWrapper to={`/movies/movie/${id}`}>\r\n      <MovieImage\r\n        src={poster_path\r\n          ? `https://image.tmdb.org/t/p/w342${poster_path}`\r\n          : noPosterImage\r\n        }\r\n        alt={`Plakat filmu ${title}`}\r\n      />\r\n      <DetailsContainer>\r\n        <Container>\r\n          {title && (\r\n            <Title textLength={title.length} >\r\n              {title}\r\n            </Title>\r\n          )}\r\n\r\n          {release_date && (\r\n            <Year>\r\n              {role\r\n                ? `${role} (${release_date.slice(0, 4)})`\r\n                : `${release_date.slice(0, 4)}`\r\n              }\r\n            </Year>\r\n          )}\r\n          <Types genre_ids={genre_ids} />\r\n        </Container>\r\n        <Ratings\r\n          voteAverage={vote_average}\r\n          voteCount={vote_count}\r\n        />\r\n      </DetailsContainer>\r\n    </MovieWrapper>\r\n  );\r\n};\r\n\r\nexport default MovieTile;","import styled from \"styled-components\";\r\n\r\nexport const MovieContainer = styled.div`\r\n  max-width: 1368px;\r\n  margin: 24px auto 40px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 324px);\r\n  grid-gap: 24px;\r\n  justify-content: center;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.bigMobile}px) {\r\n    grid-gap: 20px;\r\n    grid-template-columns: unset;\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n    grid-gap: 16px;\r\n  }\r\n\r\n`;\r\n\r\nexport const PeopleContainer = styled(MovieContainer)`\r\n  grid-template-columns: repeat(auto-fill, 208px);;\r\n`;","import styled from \"styled-components\";\r\n\r\nconst Header = styled.h1`\r\n  margin: 56px 0 24px;\r\n  font-weight: 600;\r\n  font-size: 36px;\r\n  line-height: 120%;\r\n  color: ${({ theme }) => theme.colors.woodsmoke};\r\n`;\r\n\r\nexport default Header;","const apiKey = \"c09290276e151ca70a95c0fe106ed759\";\r\n\r\nexport default apiKey;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loading from \"../../../common/Loading\";\r\nimport BottomNavbar from \"../../BottomNavbar\";\r\nimport MovieTile from \"../../../common/tiles/MovieTile\";\r\nimport {\r\n    selectList,\r\n    selectLoading,\r\n    setActivePath,\r\n    resetState,\r\n} from \"../../listSlice\";\r\nimport { MovieContainer } from \"./../../../common/tiles/TileContainer\";\r\nimport Header from \"./../../../common/Header\";\r\nimport { usePageParameter } from \"../../pageParameters\";\r\nimport apiKey from \"../../../common/apiKey\";\r\nimport language from \"../../../common/language\";\r\n\r\nconst MoviesPage = () => {\r\n    const dispatch = useDispatch();\r\n    const urlPageNumber = +usePageParameter(\"page\");\r\n    const urlQuery = usePageParameter(\"search\");\r\n    const popularMovies = useSelector(selectList);\r\n    const isLoading = useSelector(selectLoading);\r\n\r\n    useEffect(() => {\r\n        dispatch(setActivePath(urlQuery\r\n            ? `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=${language}&query=${urlQuery}&page=${urlPageNumber < 1 || urlPageNumber > 500 ? 1 : urlPageNumber}`\r\n            : `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=${language}&page=${urlPageNumber < 1 || urlPageNumber > 500 ? 1 : urlPageNumber}`)\r\n        );\r\n\r\n        return () => {\r\n            dispatch(resetState());\r\n        };\r\n    }, [urlPageNumber, urlQuery]);\r\n\r\n    return (\r\n        <>\r\n            <Header>Popular movies</Header>\r\n\r\n            {isLoading\r\n                ? <Loading />\r\n                : (\r\n                    <>\r\n                        <MovieContainer>\r\n                            {popularMovies.map(({\r\n                                id,\r\n                                poster_path,\r\n                                title,\r\n                                release_date,\r\n                                vote_average,\r\n                                vote_count,\r\n                                genre_ids,\r\n                            }) =>\r\n                                <MovieTile\r\n                                    key={id}\r\n                                    id={id}\r\n                                    poster_path={poster_path}\r\n                                    title={title}\r\n                                    release_date={release_date}\r\n                                    vote_average={vote_average}\r\n                                    vote_count={vote_count}\r\n                                    genre_ids={genre_ids}\r\n                                ></MovieTile>\r\n                            )}\r\n                        </MovieContainer>\r\n                        <BottomNavbar />\r\n                    </>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MoviesPage;","const language = \"en-US\";\r\n\r\nexport default language;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst itemSlice = createSlice({\r\n    name: \"item\",\r\n    initialState: {\r\n        itemData: [],\r\n        extraData: [],\r\n        loading: true,\r\n        itemId: undefined,\r\n        activeItemPath: \"\",\r\n        activeExtraPath: \"\",\r\n    },\r\n    reducers: {\r\n        setItemId: (state, { payload: id }) => {\r\n            state.loading = true;\r\n            state.itemId = id;\r\n        },\r\n        fetchItemSuccess: (state, { payload: { itemData, extraData } }) => {\r\n            state.itemData = itemData;\r\n            state.extraData = extraData;\r\n            state.loading = false;\r\n        },\r\n        fetchItemError: state => {\r\n            state.loading = false;\r\n        },\r\n        setActivePath: (state, { payload: { path1, path2 } }) => {\r\n            state.activeItemPath = path1;\r\n            state.activeExtraPath = path2;\r\n        },\r\n        resetState: (state) => {\r\n            state.itemData = [];\r\n            state.extraData = [];\r\n            state.itemId = undefined;\r\n            state.activeItemPath = \"\";\r\n            state.activeExtraPath = \"\";\r\n            state.loading = true;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    setItemId,\r\n    fetchItemSuccess,\r\n    fetchItemError,\r\n    setActivePath,\r\n    resetState,\r\n} = itemSlice.actions;\r\nexport const selectItemData = state => state.item.itemData;\r\nexport const selectExtraData = state => state.item.extraData;\r\nexport const selectLoading = state => state.item.loading;\r\n\r\nexport default itemSlice.reducer;","import styled from \"styled-components\";\r\nimport { Wrapper, Image, DetailsContainer, Title } from \"./../tileStyles\";\r\n\r\nexport const PersonWrapper = styled(Wrapper)`\r\n    width: 208px;\r\n    flex-direction: column;\r\n    padding: 16px;\r\n`;\r\n\r\nexport const PersonImage = styled(Image)`\r\n    width: 176px;\r\n    height: 231px;\r\n    object-fit: cover;\r\n    object-position: top;\r\n    margin-bottom: 16px;\r\n`;\r\n\r\nexport const PersonDetailsContainer = styled(DetailsContainer)`\r\n    grid-template-columns: repeat(6, 1fr);\r\n`;\r\n\r\nexport const PersonName = styled(Title)`\r\n    text-align: center;\r\n    font-size: ${({ subtitle }) => subtitle ? \"18px\" : \"22px\"};\r\n`;\r\n\r\nexport const Subtitle = styled.p`\r\n    font-size: ${({ textLength }) => (textLength > 20)\r\n        ? \"12px\"\r\n        : \"16px\"\r\n    };\r\n    line-height: 150%;\r\n    text-align: center;\r\n    color: ${({ theme }) => theme.colors.waterloo};\r\n    margin: 0;\r\n`;","import React from \"react\";\r\nimport {\r\n    PersonWrapper,\r\n    PersonImage,\r\n    PersonDetailsContainer,\r\n    PersonName,\r\n    Subtitle,\r\n} from \"./styled\";\r\nimport noProfileImage from \"./../../../assets/noPosterImage.svg\"\r\n\r\nconst PersonTile = ({ profile_path, id, name, subtitle = \"\" }) => {\r\n    return (\r\n        <PersonWrapper to={`/people/person/${id}`}>\r\n            <PersonImage\r\n                src={profile_path\r\n                    ? `https://image.tmdb.org/t/p/w185${profile_path}`\r\n                    : noProfileImage\r\n                }\r\n                alt={`Zdjęcie ${name}`}\r\n            />\r\n            <PersonDetailsContainer>\r\n                <>\r\n                    {name &&\r\n                        <PersonName textLength={name.length} subtitle={subtitle}>\r\n                            {name}\r\n                        </PersonName>\r\n                    }\r\n                    {subtitle &&\r\n                        <Subtitle textLength={subtitle.length}>\r\n                            {subtitle}\r\n                        </Subtitle>\r\n                    }\r\n                </>\r\n            </PersonDetailsContainer>\r\n        </PersonWrapper >\r\n    );\r\n};\r\n\r\nexport default PersonTile;","import styled from \"styled-components\";\r\nimport { Wrapper } from \"./tileStyles\";\r\n\r\nexport const BigTileWrapper = styled(Wrapper)`\r\n    flex-direction: row;\r\n    width: 100%;\r\n    padding: 40px;\r\n    margin: 56px auto 64px;\r\n`;\r\n\r\nexport const BigTileHeader = styled.div`\r\n    font-weight: 600;\r\n    font-size: 36px;\r\n    line-height: 120%;\r\n`;\r\n\r\nexport const BigDetailsContainer = styled.div`\r\n    display: grid;\r\n    height: fit-content;\r\n    grid-gap: 24px;\r\n    margin-left: 40px;\r\n`;\r\n\r\nexport const Detail = styled.div`\r\n    font-size: 18px;\r\n    line-height: 120%;\r\n`;\r\n\r\nexport const MarkedDetail = styled.span`\r\n    color: ${({ theme }) => theme.colors.stormGray};\r\n`;\r\n\r\nexport const Description = styled.div`\r\n    font-size: 20px;\r\n    line-height: 160%;\r\n`;\r\n\r\nexport const DetailsWrapper = styled.div`\r\n    display: grid;\r\n    grid-gap: 8px;\r\n`;","import styled from \"styled-components\";\r\nimport { Image } from \"./../tileStyles\";\r\n\r\nexport const BigMovieImage = styled(Image)`\r\n    width: 312px;\r\n    height: 464px;\r\n`;","import React from \"react\";\r\nimport Ratings from \"../Ratings\";\r\nimport {\r\n    BigTileWrapper,\r\n    BigTileHeader,\r\n    BigDetailsContainer,\r\n    Detail,\r\n    MarkedDetail,\r\n    Description,\r\n    DetailsWrapper,\r\n} from \"../bigTilesStyles\";\r\nimport { BigMovieImage } from \"./styled\";\r\nimport noPosterImage from \"./../../../assets/noPosterImage.svg\";\r\nimport Types from \"../Types\";\r\n\r\nconst BigMovieTile = ({\r\n    poster_path,\r\n    title,\r\n    release_date,\r\n    vote_average,\r\n    vote_count,\r\n    genre_ids,\r\n    production_countries,\r\n    overview,\r\n}) => {\r\n    return (\r\n        <BigTileWrapper as=\"div\">\r\n            <BigMovieImage\r\n                src={poster_path\r\n                    ? `https://image.tmdb.org/t/p/w342${poster_path}`\r\n                    : noPosterImage\r\n                }\r\n                alt={`Plakat filmu ${title}`}\r\n            />\r\n            <BigDetailsContainer>\r\n                {title &&\r\n                    <BigTileHeader>\r\n                        {title}\r\n                    </BigTileHeader>\r\n                }\r\n                <DetailsWrapper>\r\n                    {production_countries &&\r\n                        <Detail>\r\n                            <MarkedDetail>Production: </MarkedDetail>\r\n                            {production_countries.map(country => `${country.name}, `)}\r\n                        </Detail>\r\n                    }\r\n                    {release_date &&\r\n                        <Detail>\r\n                            <MarkedDetail>Release date: </MarkedDetail> {release_date}\r\n                        </Detail>\r\n                    }\r\n                </DetailsWrapper>\r\n                <Types genre_ids={genre_ids} />\r\n                <Ratings\r\n                    voteAverage={vote_average}\r\n                    voteCount={vote_count}\r\n                />\r\n                {overview &&\r\n                    <Description>\r\n                        {overview}\r\n                    </Description>\r\n                }\r\n            </BigDetailsContainer>\r\n        </BigTileWrapper >\r\n    );\r\n};\r\n\r\nexport default BigMovieTile;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Loading from \"../../../common/Loading\";\r\nimport {\r\n  setActivePath,\r\n  selectLoading,\r\n  selectItemData,\r\n  setItemId,\r\n  selectExtraData,\r\n} from \"../../itemSlice\";\r\nimport language from \"./../../../common/language\";\r\nimport apiKey from \"./../../../common/apiKey\";\r\nimport { PeopleContainer } from \"../../../common/tiles/TileContainer\";\r\nimport PersonTile from \"../../../common/tiles/PersonTile\";\r\nimport Header from \"../../../common/Header\";\r\nimport BigMovieTile from \"../../../common/tiles/BigMovieTile\";\r\n\r\nconst MoviePage = () => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const movieData = useSelector(selectItemData);\r\n  const castCrewData = useSelector(selectExtraData);\r\n  const loading = useSelector(selectLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setActivePath({\r\n        path1: `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=${language}`,\r\n        path2: `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`,\r\n      }),\r\n    );\r\n    dispatch(setItemId(id));\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n          <>\r\n            <BigMovieTile\r\n              poster_path={movieData.poster_path}\r\n              title={movieData.title}\r\n              release_date={movieData.release_date}\r\n              vote_average={movieData.vote_average}\r\n              vote_count={movieData.vote_count}\r\n              genre_ids={movieData.genres && movieData.genres.map(genre => genre.id)}\r\n              production_countries={movieData.production_countries}\r\n              overview={movieData.overview}\r\n            />\r\n\r\n            <Header as=\"h2\">Cast</Header>\r\n            <PeopleContainer>\r\n              {castCrewData.cast\r\n                .slice(0, 10)\r\n                .map(({ profile_path, id, character, name, credit_id }) => (\r\n                  <PersonTile\r\n                    key={credit_id}\r\n                    profile_path={profile_path}\r\n                    id={id}\r\n                    name={name}\r\n                    subtitle={character}\r\n                  />\r\n                ))}\r\n            </PeopleContainer>\r\n\r\n            <Header as=\"h2\">Crew</Header>\r\n            <PeopleContainer>\r\n              {castCrewData.crew\r\n                .slice(0, 10)\r\n                .map(({ profile_path, id, job, name, credit_id }) => (\r\n                  <PersonTile\r\n                    key={credit_id}\r\n                    profile_path={profile_path}\r\n                    id={id}\r\n                    name={name}\r\n                    subtitle={job}\r\n                  />\r\n                ))}\r\n            </PeopleContainer>\r\n          </>\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loading from \"../../../common/Loading\";\r\nimport BottomNavbar from \"../../BottomNavbar\";\r\nimport {\r\n    resetState,\r\n    selectList,\r\n    selectLoading,\r\n    setActivePage,\r\n    setActivePath,\r\n} from \"../../listSlice\";\r\nimport { PeopleContainer } from \"./../../../common/tiles/TileContainer\";\r\nimport Header from \"./../../../common/Header\";\r\nimport { usePageParameter } from \"../../pageParameters\";\r\nimport PersonTile from \"./../../../common/tiles/PersonTile\";\r\nimport apiKey from \"../../../common/apiKey\";\r\nimport language from \"../../../common/language\";\r\n\r\nconst PeoplePage = () => {\r\n    const dispatch = useDispatch();\r\n    const urlPageNumber = +usePageParameter(\"page\");\r\n    const urlQuery = usePageParameter(\"search\");\r\n    const popularPeople = useSelector(selectList);\r\n    const isLoading = useSelector(selectLoading);\r\n\r\n    useEffect(() => {\r\n        dispatch(setActivePath(urlQuery\r\n            ? `https://api.themoviedb.org/3/search/person?api_key=${apiKey}&language=${language}&query=${urlQuery}&page=${urlPageNumber < 1 || urlPageNumber > 500 ? 1 : urlPageNumber}`\r\n            : `https://api.themoviedb.org/3/person/popular?api_key=${apiKey}&language=${language}&page=${urlPageNumber < 1 || urlPageNumber > 500 ? 1 : urlPageNumber}`)\r\n        );\r\n        return () => {\r\n            dispatch(resetState());\r\n        };\r\n    }, [urlPageNumber, urlQuery]);\r\n\r\n    return (\r\n        <>\r\n            <Header>Popular People</Header>\r\n\r\n            {isLoading\r\n                ? <Loading />\r\n                : (\r\n                    <>\r\n                        <PeopleContainer>\r\n                            {popularPeople.map(({ profile_path, id, name }) =>\r\n                                <PersonTile\r\n                                    key={id}\r\n                                    profile_path={profile_path}\r\n                                    id={id}\r\n                                    name={name}\r\n                                />\r\n                            )}\r\n                        </PeopleContainer>\r\n                        <BottomNavbar />\r\n                    </>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PeoplePage;","import styled from \"styled-components\";\r\nimport { Image } from \"./../tileStyles\";\r\n\r\nexport const BigTileImage = styled(Image)`\r\n    width: 399px;\r\n    height: 564px;\r\n`;","import React from \"react\";\r\nimport {\r\n    BigTileWrapper,\r\n    BigTileHeader,\r\n    BigDetailsContainer,\r\n    Detail,\r\n    MarkedDetail,\r\n    Description,\r\n    DetailsWrapper,\r\n} from \"./../bigTilesStyles\";\r\nimport { BigTileImage } from \"./styled\";\r\nimport noProfileImage from \"./../../../assets/noPosterImage.svg\";\r\n\r\nconst BigPersonTile = ({\r\n    profile_path,\r\n    name,\r\n    birthday,\r\n    place_of_birth,\r\n    biography,\r\n}) => {\r\n    return (\r\n        <BigTileWrapper as=\"div\">\r\n            <BigTileImage\r\n                src={profile_path\r\n                    ? `https://image.tmdb.org/t/p/h632${profile_path}`\r\n                    : noProfileImage\r\n                }\r\n                alt={`Zdjęcie ${name}`}\r\n            />\r\n            <BigDetailsContainer>\r\n                {name &&\r\n                    <BigTileHeader>\r\n                        {name}\r\n                    </BigTileHeader>\r\n                }\r\n                <DetailsWrapper>\r\n                    {birthday &&\r\n                        <Detail>\r\n                            <MarkedDetail>Date of birth: </MarkedDetail> {birthday}\r\n                        </Detail>\r\n                    }\r\n                    {place_of_birth &&\r\n                        <Detail>\r\n                            <MarkedDetail>Place of birth: </MarkedDetail> {place_of_birth}\r\n                        </Detail>\r\n                    }\r\n                </DetailsWrapper>\r\n                {biography &&\r\n                    <Description>\r\n                        {biography}\r\n                    </Description>\r\n                }\r\n            </BigDetailsContainer>\r\n        </BigTileWrapper >\r\n    );\r\n};\r\n\r\nexport default BigPersonTile;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Loading from \"../../../common/Loading\";\r\nimport {\r\n    setActivePath,\r\n    selectLoading,\r\n    selectItemData,\r\n    setItemId,\r\n    selectExtraData\r\n} from \"../../itemSlice\";\r\nimport language from \"./../../../common/language\";\r\nimport apiKey from \"./../../../common/apiKey\";\r\nimport BigPersonTile from \"../../../common/tiles/BigPersonTile\";\r\nimport MovieTile from \"../../../common/tiles/MovieTile\";\r\nimport Header from \"./../../../common/Header\";\r\nimport { MovieContainer } from \"./../../../common/tiles/TileContainer\";\r\n\r\nconst PersonPage = () => {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch()\r\n    const personData = useSelector(selectItemData);\r\n    const castCrewData = useSelector(selectExtraData);\r\n    const loading = useSelector(selectLoading);\r\n\r\n    useEffect(() => {\r\n        dispatch(setActivePath({\r\n            path1: `https://api.themoviedb.org/3/person/${id}?api_key=${apiKey}&language=${language}`,\r\n            path2: `https://api.themoviedb.org/3/person/${id}/movie_credits?api_key=${apiKey}&language=${language}`,\r\n        }));\r\n        dispatch(setItemId(id));\r\n    }, [id])\r\n\r\n    return (\r\n        <>\r\n            {loading\r\n                ? <Loading />\r\n                :\r\n                <>\r\n                    <BigPersonTile\r\n                        profile_path={personData.profile_path}\r\n                        name={personData.name}\r\n                        birthday={personData.birthday}\r\n                        place_of_birth={personData.place_of_birth}\r\n                        biography={personData.biography}\r\n                    />\r\n\r\n                    <Header as=\"h2\">Cast\r\n                        ({castCrewData.cast\r\n                            ? `${castCrewData.cast.length}`\r\n                            : \"0\"\r\n                        })\r\n                    </Header>\r\n                    <MovieContainer>\r\n                        {castCrewData.cast\r\n                            .slice(0, 10)\r\n                            .map(({\r\n                                poster_path,\r\n                                id,\r\n                                title,\r\n                                release_date,\r\n                                vote_average,\r\n                                vote_count,\r\n                                character,\r\n                                credit_id,\r\n                                genre_ids,\r\n                            }) => (\r\n                                    <MovieTile\r\n                                        key={credit_id}\r\n                                        poster_path={poster_path}\r\n                                        id={id}\r\n                                        title={title}\r\n                                        release_date={release_date}\r\n                                        vote_average={vote_average}\r\n                                        vote_count={vote_count}\r\n                                        role={character}\r\n                                        genre_ids={genre_ids}\r\n                                    />\r\n                                ))}\r\n                    </MovieContainer>\r\n\r\n                    <Header as=\"h2\">Crew\r\n                        ({castCrewData.crew\r\n                            ? `${castCrewData.crew.length}`\r\n                            : \"0\"\r\n                        })\r\n                    </Header>\r\n                    <MovieContainer>\r\n                        {castCrewData.crew\r\n                            .slice(0, 10)\r\n                            .map(({\r\n                                poster_path,\r\n                                id,\r\n                                title,\r\n                                release_date,\r\n                                vote_average,\r\n                                vote_count,\r\n                                job,\r\n                                credit_id,\r\n                                genre_ids,\r\n                            }) => (\r\n                                    <MovieTile\r\n                                        key={credit_id}\r\n                                        poster_path={poster_path}\r\n                                        id={id}\r\n                                        title={title}\r\n                                        release_date={release_date}\r\n                                        vote_average={vote_average}\r\n                                        vote_count={vote_count}\r\n                                        role={job}\r\n                                        genre_ids={genre_ids}\r\n                                    />\r\n                                ))}\r\n                    </MovieContainer>\r\n                </>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PersonPage;","import styled from \"styled-components\";\r\nimport InputIcon from \"./../../assets/input-logo.svg\";\r\n\r\nexport const Input = styled.input`\r\n    width: 432px;\r\n    height: 48px;\r\n    border: 1px solid ${({ theme }) => theme.colors.cornsilk};\r\n    border-radius: 33px;\r\n    padding-left: 64px;\r\n    background-color: white;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n\r\n    &::placeholder {\r\n        font-size: 16px;\r\n        line-height: 150%;\r\n        color: ${({ theme }) => theme.colors.waterloo};\r\n    }\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n        width: 288px;\r\n        height: 44px;\r\n        padding-left: 40px;\r\n    }\r\n`;\r\n\r\nexport const SearchBox = styled.form`\r\n    position: relative;\r\n`;\r\n\r\nexport const StyledLensButton = styled.button`\r\n    position: absolute;\r\n    width: 24px;\r\n    height: 24px;\r\n    background-image: url(${InputIcon});\r\n    background-size:24px;\r\n    background-color: transparent;\r\n    border: none;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    left: 24px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    cursor: pointer;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n        height: 14px;\r\n        width: 14px;\r\n        background-size:14px;\r\n        left: 16px;\r\n    }\r\n`;","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { selectQuery, setQuery } from \"../listSlice\";\r\nimport { useReplacePageParameters } from \"../pageParameters\";\r\nimport { SearchBox, Input, StyledLensButton } from \"./styled\";\r\n\r\nconst Search = () => {\r\n    const query = useSelector(selectQuery);\r\n    const dispatch = useDispatch();\r\n    const replacePageParameters = useReplacePageParameters();\r\n    const location = useLocation();\r\n    const searchText = location.pathname.includes(\"movie\") ? \"movies\" : \"people\";\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        replacePageParameters([\r\n            {\r\n                key: \"search\",\r\n                value: query,\r\n            },\r\n            {\r\n                key: \"page\",\r\n                value: 1,\r\n            }\r\n        ]);\r\n    };\r\n\r\n    return (\r\n        <SearchBox onSubmit={onFormSubmit}>\r\n            <Input\r\n                placeholder={`Search for ${searchText}`}\r\n                value={query}\r\n                onChange={({ target }) => dispatch(setQuery(target.value))}\r\n            />\r\n            <StyledLensButton />\r\n        </SearchBox>\r\n    );\r\n};\r\n\r\nexport default Search;","import React, { useEffect } from \"react\";\r\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport {\r\n  WidthContainer,\r\n  NavContainer,\r\n  NavContainerRight,\r\n  NavContainerLeft,\r\n  List,\r\n  ListItem,\r\n  Nav,\r\n  StyledNavLink,\r\n  Title,\r\n  StyledTitleLogo,\r\n} from \"./styled\";\r\nimport MoviesPage from \"./features/movies/MoviesPage\";\r\nimport MoviePage from \"./features/movies/MoviePage\";\r\nimport PeoplePage from \"./features/people/PeoplePage\";\r\nimport PersonPage from \"./features/people/PersonPage\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchCommon } from \"./common/commonSlice\";\r\nimport Search from \"./features/Search\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCommon());\r\n  }, [])\r\n\r\n  return (\r\n    <HashRouter>\r\n      <main>\r\n        <Nav>\r\n          <WidthContainer>\r\n            <NavContainer>\r\n              <NavContainerLeft>\r\n                <StyledTitleLogo />\r\n                <Title>Movie Browser</Title>\r\n                <List>\r\n                  <ListItem>\r\n                    <StyledNavLink to=\"/movies\">MOVIES</StyledNavLink>\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <StyledNavLink to=\"/people\">PEOPLE</StyledNavLink>\r\n                  </ListItem>\r\n                </List>\r\n              </NavContainerLeft>\r\n              <NavContainerRight>\r\n                <Search/>\r\n              </NavContainerRight>\r\n            </NavContainer>\r\n          </WidthContainer>\r\n        </Nav>\r\n        <WidthContainer>\r\n          <Switch>\r\n            <Route path=\"/movies/movie/:id\">\r\n              <MoviePage />\r\n            </Route>\r\n            <Route path=\"/movies\">\r\n              <MoviesPage />\r\n            </Route>\r\n            <Route path=\"/people/person/:id\">\r\n              <PersonPage />\r\n            </Route>\r\n            <Route path=\"/people\">\r\n              <PeoplePage />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Redirect to=\"/movies\" />\r\n            </Route>\r\n          </Switch>\r\n        </WidthContainer>\r\n      </main>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n   html {\r\n      box-sizing: border-box;\r\n   }\r\n\r\n   *,\r\n   ::before,\r\n   ::after {\r\n      box-sizing: inherit;\r\n   }\r\n\r\n   body{\r\n      background: ${({ theme }) => theme.colors.whisper};\r\n      font-family: 'Poppins', sans-serif;\r\n   }\r\n\r\n   #root {\r\n      min-height: 100vh;\r\n   }\r\n`;\r\n","import axios from 'axios';\r\n\r\nexport const getApiData = async (link) => {\r\n    let response;\r\n    await axios.get(link)\r\n        .then(data => response = data)\r\n        .catch(() => console.log(\"error\"))\r\n    return response.data;\r\n};","import { takeEvery, call, put, delay } from \"redux-saga/effects\";\r\nimport { getApiData } from \"../getApiData\";\r\nimport {\r\n    fetchCommonError,\r\n    fetchCommonSuccess,\r\n    fetchCommon\r\n} from \"./commonSlice\";\r\nimport apiKey from \"./apiKey\";\r\nimport language from \"./language\";\r\n\r\nfunction* fetchCommonHandler() {\r\n    try {\r\n        yield delay(500);\r\n        const data = yield call(() => getApiData(\r\n            `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}&language=${language}`\r\n        ));\r\n        yield put(fetchCommonSuccess(data));\r\n    } catch (error) {\r\n        yield put(fetchCommonError());\r\n        yield call(alert, \"Coś poszło nie tak\");\r\n    }\r\n};\r\n\r\nexport function* watchfetchCommon() {\r\n    yield takeEvery(fetchCommon.type, fetchCommonHandler);\r\n};","import { takeEvery, call, put, delay } from \"redux-saga/effects\";\r\nimport store from \"../store\";\r\nimport { getApiData } from \"../getApiData\";\r\nimport {\r\n    fetchItemError,\r\n    fetchItemSuccess,\r\n    setItemId,\r\n} from \"./itemSlice\";\r\n\r\nfunction* fetchItemHandler() {\r\n    const activeItemPath = store.getState().item.activeItemPath;\r\n    const activeExtraPath = store.getState().item.activeExtraPath;\r\n\r\n    try {\r\n        yield delay(500);\r\n        const itemData = yield call(() => getApiData(activeItemPath));\r\n        const extraData = yield call(() => getApiData(activeExtraPath));\r\n        yield put(fetchItemSuccess({ itemData, extraData }));\r\n    } catch (error) {\r\n        yield put(fetchItemError());\r\n        yield call(alert, error);\r\n    }\r\n};\r\n\r\nexport function* watchSetItemId() {\r\n    yield takeEvery(setItemId.type, fetchItemHandler);\r\n};","import { takeEvery, call, put, delay } from \"redux-saga/effects\";\r\nimport { getApiData } from \"../getApiData\";\r\nimport store from \"../store\";\r\nimport {\r\n    fetchListError,\r\n    fetchListSuccess,\r\n    setActivePath,\r\n} from \"./listSlice\";\r\n\r\nfunction* fetchListHandler() {\r\n    const activePath = store.getState().list.activePath;\r\n\r\n    try {\r\n        yield delay(500);\r\n        const data = yield call(() => getApiData(activePath));\r\n        yield put(fetchListSuccess(data));\r\n    } catch (error) {\r\n        yield put(fetchListError());\r\n        yield call(alert, \"Coś poszło nie tak\");\r\n    }\r\n};\r\n\r\nexport function* watchSetActivePath() {\r\n    yield takeEvery(setActivePath.type, fetchListHandler);\r\n};","import { all } from \"redux-saga/effects\";\r\nimport { watchfetchCommon } from \"./common/commonSaga\";\r\nimport { watchSetItemId } from \"./features/itemSaga\";\r\nimport { watchSetActivePath } from \"./features/listSaga\"\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchSetActivePath(),\r\n        watchSetItemId(),\r\n        watchfetchCommon(),\r\n    ]);\r\n};","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport listReducer from \"./features/listSlice\";\r\nimport itemReducer from \"./features/itemSlice\";\r\nimport commonReducer from \"./common/commonSlice\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./rootSaga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        list: listReducer,\r\n        item: itemReducer,\r\n        common: commonReducer,\r\n    },\r\n    middleware: [sagaMiddleware],\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { GlobalStyle } from \"./GlobalStyle\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./theme\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyle />\r\n        <App />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const theme = {\r\n  colors: {\r\n    whisper: \"#F5F5FA\",\r\n    black: \"#000000\",\r\n    waterloo: \"#7E839A\",\r\n    tan: \"#F5F5FA\",\r\n    cornsilk: \"#E4E6F0\",\r\n    white: \"#FFFFFF\",\r\n    woodsmoke: \"#18181B\",\r\n    mineShaft: \"#333333\",\r\n    stormGray: \"#74788B\",\r\n  },\r\n  breakpoints: {\r\n    mobile: \"450\",\r\n    bigMobile: \"710\",\r\n    screenSmall: \"1350\",\r\n  },\r\n};"],"sourceRoot":""}